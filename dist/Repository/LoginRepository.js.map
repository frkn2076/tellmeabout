{"version":3,"sources":["../../src/Repository/LoginRepository.js"],"names":["createLogin","loginObject","Promise","resolve","reject","Login","create","error","updateLoginByEmail","updateObject","update","isActive","where","email","getLoginByEmail","incomingLoginFromDB","findOne","updateLoginMailKeyByEmail","mailKey"],"mappings":";;;;;;;AAAA;;;;AAEO,MAAMA,WAAW,GAAG,MAAMC,WAAN,IAAqB;AAC5C,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAEpC,QAAI;AACAC,qBAAMC,MAAN,CAAaL,WAAb;;AACAE,MAAAA,OAAO;AACV,KAHD,CAIA,OAAOI,KAAP,EAAc;AACVH,MAAAA,MAAM;AACT;AACJ,GATM,CAAP;AAUH,CAXM,C,CAaP;;;;;AACO,MAAMI,kBAAkB,GAAG,MAAMC,YAAN,IAAsB;AACpD,SAAO,IAAIP,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,QAAI;AACAC,qBAAMK,MAAN,CACI;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OADJ,EAEI;AAAEC,QAAAA,KAAK,EAAC;AAAEC,UAAAA,KAAK,EAACJ,YAAY,CAACI;AAArB;AAAR,OAFJ;;AAIAV,MAAAA,OAAO;AACV,KAND,CAOA,OAAOI,KAAP,EAAc;AACVH,MAAAA,MAAM;AACT;AACJ,GAXM,CAAP;AAYH,CAbM;;;;AAeA,MAAMU,eAAe,GAAG,MAAMD,KAAN,IAAe;AAC1C,SAAO,IAAIX,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,QAAI;AACA,YAAMW,mBAAmB,GAAGV,eAAMW,OAAN,CAAc;AACtCJ,QAAAA,KAAK,EAAC;AACFC,UAAAA,KAAK,EAACA;AADJ;AADgC,OAAd,CAA5B;;AAKAV,MAAAA,OAAO,CAACY,mBAAD,CAAP;AACH,KAPD,CAQA,OAAOR,KAAP,EAAc;AACVH,MAAAA,MAAM;AACT;AACJ,GAZM,CAAP;AAaH,CAdM;;;;AAkBA,MAAMa,yBAAyB,GAAGhB,WAAW,IAAI;AACpD,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,QAAI;AACAC,qBAAMK,MAAN,CACI;AAAEQ,QAAAA,OAAO,EAAE;AAAX,OADJ,EAEI;AAAEN,QAAAA,KAAK,EAAC;AAAEC,UAAAA,KAAK,EAACZ,WAAW,CAACY;AAApB;AAAR,OAFJ;;AAIAV,MAAAA,OAAO;AACV,KAND,CAOA,OAAOI,KAAP,EAAc;AACVH,MAAAA,MAAM;AACT;AACJ,GAXM,CAAP;AAYH,CAbM","sourcesContent":["import Login from 'Model/Login'\r\n\r\nexport const createLogin = async loginObject => {\r\n    return new Promise((resolve, reject) => {\r\n\r\n        try {\r\n            Login.create(loginObject);\r\n            resolve();\r\n        }\r\n        catch (error) {\r\n            reject();\r\n        }\r\n    })\r\n}\r\n\r\n//activate\r\nexport const updateLoginByEmail = async updateObject => {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            Login.update(\r\n                { isActive: 1 },\r\n                { where:{ email:updateObject.email }\r\n            })\r\n            resolve();\r\n        }\r\n        catch (error) {\r\n            reject();\r\n        }\r\n    })\r\n}\r\n\r\nexport const getLoginByEmail = async email => {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            const incomingLoginFromDB = Login.findOne({\r\n                where:{\r\n                    email:email\r\n                }\r\n            })\r\n            resolve(incomingLoginFromDB);\r\n        }\r\n        catch (error) {\r\n            reject();\r\n        }\r\n    })\r\n}\r\n\r\n\r\n\r\nexport const updateLoginMailKeyByEmail = loginObject => {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            Login.update(\r\n                { mailKey: \"1234\" },\r\n                { where:{ email:loginObject.email }\r\n            })\r\n            resolve();\r\n        }\r\n        catch (error) {\r\n            reject();\r\n        }\r\n    })\r\n}"],"file":"LoginRepository.js"}